// Step Event for obj_player_icetruck

// Handle skin switching
if (keyboard_check_pressed(ord("E"))) {
    show_debug_message("E key pressed");

    if (global.current_skin == "player") {
        show_debug_message("Switching to icetruck");
        obj_controller.switch_skin("icetruck");
    } else if (global.current_skin == "icetruck") {
        show_debug_message("Switching to player");
        obj_controller.switch_skin("player");
    }
}

// Movement input
var right_key = keyboard_check(ord("D")) || keyboard_check(vk_right);
var left_key = keyboard_check(ord("A")) || keyboard_check(vk_left);
var up_key = keyboard_check(ord("W")) || keyboard_check(vk_up);
var down_key = keyboard_check(ord("S")) || keyboard_check(vk_down);

// Calculate movement speed
xspd = (right_key - left_key) * move_spd;
yspd = (down_key - up_key) * move_spd;

// Pause movement if necessary
if instance_exists(obj_pauser) {
    xspd = 0;
    yspd = 0;
}

// Determine direction based on movement
if (yspd < 0) {
    if (xspd < 0) face = UP_LEFT;
    else if (xspd > 0) face = UP_RIGHT;
    else face = UP;
} else if (yspd > 0) {
    if (xspd < 0) face = DOWN_LEFT;
    else if (xspd > 0) face = DOWN_RIGHT;
    else face = DOWN;
} else {
    if (xspd > 0) face = RIGHT;
    else if (xspd < 0) face = LEFT;
}

// Assign sprite based on face direction
if (sprite[face] != undefined) {
    sprite_index = sprite[face];
    show_debug_message("Face: " + string(face) + ", Sprite Index: " + string(sprite_index));
} else {
    show_debug_message("Undefined sprite for face: " + string(face));
    sprite_index = spr_placeholder; // Replace with a valid placeholder sprite
}

// Collisions
if (place_meeting(x + xspd, y, obj_wall)) xspd = 0;
if (place_meeting(x, y + yspd, obj_wall)) yspd = 0;

// Movement
x += xspd;
y += yspd;

// Depth control for proper layering
depth = -bbox_bottom;

show_debug_message("Current Face: " + string(face));