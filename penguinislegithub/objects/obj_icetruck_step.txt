// Check for interaction with obj_icetruck
if (keyboard_check_pressed(ord("E"))) {
    var ice_truck = instance_place(global.player_instance.x, global.player_instance.y, obj_icetruck);

    if (ice_truck != noone && global.current_skin == "player") {
        // Remove the ice truck and switch to obj_player_icetruck
        instance_destroy(ice_truck);
        var player_x = global.player_instance.x;
        var player_y = global.player_instance.y;
        instance_destroy(global.player_instance);
        global.player_instance = instance_create_layer(player_x, player_y, "Instances", obj_player_icetruck);
        global.current_skin = "icetruck";

    } else if (global.current_skin == "icetruck") {
        // Switch back to obj_player and re-add obj_icetruck
        var player_x = global.player_instance.x;
        var player_y = global.player_instance.y;
        instance_destroy(global.player_instance);
        global.player_instance = instance_create_layer(player_x, player_y, "Instances", obj_player);
        global.current_skin = "player";
        instance_create_layer(player_x, player_y, "Instances", obj_icetruck);
    }
}

// Smooth camera movement using global.camera
var target_x = global.player_instance.x - (camera_get_view_width(global.camera) / 2);
var target_y = global.player_instance.y - (camera_get_view_height(global.camera) / 2);

// Clamp within room bounds
target_x = clamp(target_x, 0, room_width - camera_get_view_width(global.camera));
target_y = clamp(target_y, 0, room_height - camera_get_view_height(global.camera));

// Smooth movement
var current_x = camera_get_view_x(global.camera);
var current_y = camera_get_view_y(global.camera);

var smooth_x = lerp(current_x, target_x, 0.1);
var smooth_y = lerp(current_y, target_y, 0.1);

camera_set_view_pos(global.camera, smooth_x, smooth_y);

// Display interaction message if the player is close
if (distance_to_object(global.player_instance) < 32) { // Adjust the distance as needed
    draw_text(x, y - 20, "Press 'E' to enter");
}

// Ensure proper depth sorting
depth = -bbox_bottom;
