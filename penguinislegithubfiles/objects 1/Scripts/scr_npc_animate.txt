/// @desc Handles NPC animation cycling

// Ensure the script is called on a valid instance
if (!instance_exists(self)) {
    show_debug_message("Error: scr_npc_animate called on a non-existent instance.");
    exit;
}

// Declare animations array
var animations;

// Assign animations based on the object type
switch (object_index) {
    case obj_npc_black:
        animations = [spr_black_idle, spr_black_raisehand, spr_black_talk];
        break;
    case obj_npc_blazer:
        animations = [spr_blazer_idle, spr_blazer_lookaround, spr_blazer_stare, spr_blazer_talk];
        break;
    case obj_npc_blue:
        animations = [spr_blue_idle, spr_blue_lookaround, spr_blue_talk];
        break;
    case obj_npc_green:
        animations = [spr_green_lookaround, spr_green_talk];
        break;
    case obj_npc_red:
        animations = [spr_red_lookaround, spr_red_talk];
        break;
    default:
        show_debug_message("Error: scr_npc_animate called on an unsupported object type.");
        exit;
}

// Initialize required variables if they don't exist
if (!variable_instance_exists(id, "frame_delay")) {
    frame_delay = 0; // Tracks time between frame updates
}
if (!variable_instance_exists(id, "animation_index")) {
    animation_index = 0; // Tracks the current animation frame
}

// Increment the frame delay
frame_delay += 1;
if (frame_delay >= 10) { // Adjust this value to control animation speed
    animation_index++;
    frame_delay = 0; // Reset the frame delay
}

// Cycle through the animation frames
if (animation_index >= array_length(animations)) {
    animation_index = 0; // Loop back to the first animation
}

// Update the sprite to the current frame
sprite_index = animations[animation_index];
